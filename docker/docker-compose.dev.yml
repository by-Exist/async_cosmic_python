version: "3.8"

volumes:
  database-volume:
  zookeeper-volume:
  kafka-volume:
  connect-logs:
  connect-config:


services:

  traefik:
    extends:
      file: docker-compose.yml
      service: traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  postgres:
    extends:
      file: docker-compose.yml
      service: postgres
    volumes:
      - database-volume:/var/lib/postgresql/data
    env_file:
      - envs/dev/postgres.env

  pgadmin:
    extends:
      file: docker-compose.yml
      service: pgadmin
    env_file:
      - envs/dev/pgadmin.env

  zookeeper:
    extends:
      file: docker-compose.yml
      service: zookeeper
    volumes:
      - zookeeper-volume:/bitnami/zookeeper
    env_file:
      - envs/dev/zookeeper.env

  kafka:
    extends:
      file: docker-compose.yml
      service: kafka
    volumes:
      - kafka-volume:/bitnami/kafka
    env_file:
      - envs/dev/kafka.env
    environment:
      - KAFKA_CFG_BROKER_ID=0

  kafka-ui:
    extends:
      file: docker-compose.yml
      service: kafka-ui
    env_file:
      - envs/dev/kafka-ui.env

  connect:
    extends:
      file: docker-compose.yml
      service: connect
    volumes:
      - connect-logs:/kafka/logs
      - connect-config:/kafka/config
    env_file:
      - envs/dev/connect.env

  mailhog:
    extends:
      file: docker-compose.yml
      service: mailhog

  allocation:
    extends:
      file: docker-compose.yml
      service: allocation
    volumes:
      - ../allocation:/src/allocation
      - ../tests:/src/tests
    command: >
      sh -c "
        python -m allocation.entrypoint.pre_start.wait_database &&
        python -m allocation.entrypoint.pre_start.create_table &&
        python -m allocation.entrypoint.pre_start.add_connector &&
        uvicorn allocation.entrypoint.fastapi_:app --reload --host=0.0.0.0 --port=8000
      "
    env_file:
      - envs/dev/allocation.env
